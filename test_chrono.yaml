command_execution:
- command_name: engine.datascience.commands.RunBqProdToProdRecommendations
  command_parameters:
  - name: days_to_lookback
    value: '30'
  - name: recommendation_type
    value: CoPurchase
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: CoPurchase - Precomputed CoPurchase
    Recommendations for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.predictive_audiences.commands.SetDemoPartnerData
  command_parameters: []
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: SetDemoPartnerData - SetDemoPartnerData
    for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.datascience.commands.RunBqProdToProdRecommendations
  command_parameters:
  - name: days_to_lookback
    value: '30'
  - name: recommendation_type
    value: CoCart
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: CoCart - Precomputed CoCart Recommendations
    for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.datascience.commands.RunAlsFactorsRecommendationsWrapper
  command_parameters: []
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: AlsFactorsRecommendations - AlsFactorsRecommendations
    for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.datascience.commands.RunBqProdToProdRecommendations
  command_parameters:
  - name: days_to_lookback
    value: '30'
  - name: recommendation_type
    value: CoView
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: CoView - Precomputed CoView Recommendations
    for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.predictive_audiences.commands.RunPredictiveSegmentsProductAffinity
  command_parameters: []
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: ComputeProductAffinity - ComputeProductAffinity
    for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.datascience.commands.RunPreComputedAttributeRank
  command_parameters:
  - name: attributes
    value: category, subcategory, division
  - name: best_seller_days
    value: 30, 20
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: PreComputedAttributeRank - Precomputed
    PreComputedAttributeRank Recommendations for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.datascience.commands.RunBqProdToProdRecommendations
  command_parameters:
  - name: days_to_lookback
    value: '30'
  - name: recommendation_type
    value: ViewToPurchase
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: ViewToPurchase - Precomputed ViewToPurchase
    Recommendations for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.datascience.commands.ComputeReplenishmentCustomers
  command_parameters:
  - name: category
    value: ''
  - name: minimum_purchases
    value: '4'
  - name: minimum_days_between_purchases
    value: '10'
  - name: replenishment_lead_time_days
    value: '3'
  - name: minimum_customers
    value: '100'
  - name: product_filter
    value: ''
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: ComputeReplenishmentCustomers -
    ComputeReplenishmentCustomers for ann_taylor'
  schedule: every day 02:00
  schedule_command: true
  timezone: US/Eastern
- command_name: engine.analytics_reports.commands.ExecuteScheduledReportDelivery
  command_parameters:
  - name: partner
    value: ann_taylor
  - name: scheduled_report_id
    value: '4928733476044800'
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: Scheduled Report - for id 4928733476044800
    for ann_taylor'
  schedule: every sunday 14:00
  schedule_command: true
- command_name: engine.analytics_reports.commands.ExecuteScheduledReportDelivery
  command_parameters:
  - name: partner
    value: ann_taylor
  - name: scheduled_report_id
    value: '6036273549066240'
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: Scheduled Report - for id 6036273549066240
    for ann_taylor'
  schedule: every day 17:00
  schedule_command: true
- command_name: engine.analytics_reports.commands.ExecuteScheduledReportDelivery
  command_parameters:
  - name: partner
    value: ann_taylor
  - name: scheduled_report_id
    value: '6110406440697856'
  name: 'PROTECTED BLUECORE SCHEDULED JOB OF TYPE: Scheduled Report - for id 6110406440697856
    for ann_taylor'
  schedule: '2021-11-22 15:15:25'
  schedule_command: true
data_sync:
- name: unsub_put
  description: daily export of unsubscribes, either intentionally unsubbing from Bluecore emails or by blounce/blocked events
  pipeline:
  - idx: 0
    bigquery_query:
      destination_format: CSV
      source_file_path: at_unsub_put.sql
  - idx: 1
    encrypt:
      recipient: SSG-APP-EFT-Support@ascenaretail.com
  - idx: 2
    ftp_put:
      dirname: ann_taylor/bluecore_to_ann_taylor/unsubscribes_from_bluecore
      filename: AT-fromBluecore-unsubs_%Y%m%d.csv.pgp
      username: chronometer
  rerun_policy: immediate
  feed_category:
    - export_email_eligibility
  schedule: every day 13:00
  timezone: US/Eastern
- name: at_decrypt_file_test
  description: used for adhoc decryption needs
  pipeline:
  - idx: 0
    ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: AnnIncLOFT_profile_20220816_REJECT.xlsx.pgp
      username: chronometer
  - idx: 1
    decrypt: {}
  - idx: 2
    ftp_put:
      dirname: ann_taylor/test_folder/decrypt-temp
      filename: AnnIncLOFT_profile_20220816_REJECT.xlsx
      username: chronometer
  rerun_policy: ignore
  schedule: every 99999 hours
  timezone: US/Eastern
- name: ann_taylor_inventory_feed_inventory_mapping
  description: mapping inventory values from a product feed to a temp table and the products table
  pipeline:
  - idx: 0
    ftp_get:
      dirname: ann_taylor/inventory_feed
      glob: anntaylor_product_feed_*.csv.pgp
      username: chronometer
  - idx: 1
    decrypt: {}
  - idx: 2
    python_transform:
      source_file_path: inventory_feed_cleaner.py
  - idx: 3
    bigquery_put:
      dataset_id: ann_taylor
      project_id: triggeredmail
      schema: '{"fields":[{"name":"id","mode":"NULLABLE","type":"STRING"},{"name":"inventory","mode":"NULLABLE","type":"STRING"}]}'
      table_name: ann_taylor_inventory_feed
      write_disposition: WRITE_TRUNCATE
  - idx: 4
    mapper:
      field_def_file: inventory_feed_inventory_mapper.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_inventory_feed_inventory_mapping
      shards: 20
  rerun_policy: immediate
  feed_category:
    - import_product_data
  schedule: every day 04:00
  timezone: US/Eastern
- name: ann_taylor_invalid_image_oos_patching
  description: marking any products with a placeholder image as out of stock
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: at_patch_invalid_image_oos.sql
  - idx: 1
    mapper:
      field_def_file: invalid_image_oos_mapper.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_invalid_image_oos_patching
  rerun_policy: immediate
  feed_category:
    - import_product_data
  schedule: every day 05:00
  timezone: US/Eastern
- name: ann_taylor_inventory_feed_oos_mapping
  description: patching any products not received in the daily product feed as out of stock
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: inventory_feed_oos.sql
  - idx: 1
    python_transform:
      source_file_path: inventory_feed_stopper.py
  - idx: 2
    reduce_to_delta: {}
  - idx: 3
    mapper:
      field_def_file: inventory_feed_oos_mapper.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_inventory_feed_oos_mapper
  rerun_policy: immediate
  feed_category:
    - import_product_data
  schedule: every day 05:00
  timezone: US/Eastern
- name: patch_new_arrival_property
  description: patching the first date a product was seen in the integration to the products table
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: patch_new_arrival_property_query.sql
  - idx: 1
    mapper:
      field_def_file: patch_new_arrival_property_feed.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_patch_new_arrival_property_feed
  rerun_policy: immediate
  feed_category:
    - import_product_data
  schedule: every day 01:00
  timezone: US/Eastern
- name: patch_days_since_new_arrival_property
  description: patching an update of valid products' "days since new arrival" attribute
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: patch_days_since_new_arrival.sql
  - idx: 1
    mapper:
      field_def_file: patch_days_since_new_arrival.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_patch_days_since_new_arrival
      shards: 100
  rerun_policy: immediate
  feed_category:
    - import_product_data
  schedule: every day 02:00
  timezone: US/Eastern
- name: ann_taylor_MAS_customer
  description: updating customer data from MAS feed
  pipeline:
  - idx: 0
    ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: MAS_BLUECORE_CUSTOMER_AT_*.csv.pgp
      username: chronometer
  - idx: 1
    decrypt: {}
  - idx: 2
    reduce_to_delta: {}
  - idx: 3
    mapper:
      field_def_file: MAS_customer.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_MAS_customer
      shards: 20
  rerun_policy: immediate
  feed_category:
    - import_customer_data
  schedule: every wednesday 10:00
  timezone: US/Eastern
- name: ann_taylor_criteo_sync_post_recurring_audience_to_pubsub
  description: posting daily criteo audiences to pubsub topic
  pipeline:
  - idx: 0
    ftp_get:
      allow_same_file_download: true
      dirname: /ann_taylor/data_exports/criteo_recurring_audiences
      glob: '*.csv'
      username: chronometer
  - idx: 1
    pubsub_publish:
      batch_size: 1
      rows_per_message: 45000
      topic: ann_taylor_write_criteo_audience
  rerun_policy: immediate
  feed_category: 
    - export_audience
  schedule: every day 6:00
  timezone: US/Eastern
- name: ann_taylor_criteo_sync_wipe_directory_recurring
  description: deleting the previous day's criteo audiences from the pubsub topic
  pipeline:
  - idx: 0
    pubsub_trigger:
      message: '{"WIPE_DIRECTORY": "/ann_taylor/data_exports/criteo_recurring_audiences"}'
      topic: ann_taylor_write_criteo_audience
  rerun_policy: immediate
  feed_category:
    - export_audience
  schedule: every day 04:00
  timezone: US/Eastern
- name: ann_taylor_identify_hash
  pipeline:
  - bigquery_query:
      destination_format: CSV
      source_file_path: get_new_hashes.sql
    idx: 0
  - idx: 1
    streaming_import:
      import_type: customer_patch
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.customer.email"
          key: "email"
        - field_type: "string"
          path: "$.properties.distinct_id"
          key: "p_sha256_hash"
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "feed"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "customer MD5 mapping file"
        - field_type: "boolean"
          path: "$.properties.customer.has_hash_alias"
          key: "@has_hash_alias"
          value: true
  schedule: every day 14:00
  timezone: US/Eastern
- name: ann_taylor_kobie_test_data_automated_decryption
  pipeline:
  - ftp_get:
      dirname: ann_taylor/kobie_feeds
      glob: '*.pgp'
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - ftp_put:
      dirname: ann_taylor/test_folder/kobie-test
      username: chronometer
    idx: 2
  schedule: every day 14:00
  timezone: US/Eastern
- name: ann_taylor_criteo_audience_test
  pipeline:
  - ftp_get:
      dirname: ann_taylor/test_folder
      glob: MAS_BLUECORE_CUSTOMER_AT_CRITEO_*.csv.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - ftp_put:
      dirname: ann_taylor/test_folder
      username: chronometer
    idx: 2
  schedule: every day 14:00
  timezone: US/Eastern
- name: kobie_points_summary_ftp_to_bq_put
  pipeline:
  - ftp_get:
      dirname: ann_taylor/kobie_feeds
      glob: ANN_OB_Point_Summary_*.txt.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - idx: 2
    python_transform:
      source_file_path: kobie_points_summary.py
  - bigquery_put:
      dataset_id: r_ascena
      project_id: client-data-ingest
      schema: '{"fields":[{"name":"alchemy_id","mode":"REQUIRED","type":"STRING"},{"name":"pts_total_balance","mode":"NULLABLE","type":"FLOAT64"},{"name":"pts_near_reward","mode":"NULLABLE","type":"FLOAT64"}]}'
      table_name: kobie_points_update_by_alchemy_id
      write_disposition: WRITE_TRUNCATE
    idx: 3
  schedule: every day 00:00
  timezone: US/Eastern
- description: of the Kobie jobs, this job in particular passes many customer attributes
    that are static coming from Kobie.
  name: kobie_account_update_ann_taylor
  pipeline:
  - ftp_get:
      dirname: ann_taylor/kobie_feeds
      glob: ANN_OB_Account_Updates_*.txt.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - idx: 2
    python_transform:
      source_file_path: kobie_account_updates_transform.py
  - idx: 3
    mapper:
      field_def_file: kobie_account_updates.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: kobie_account_update_ann_taylor
      shards: 200
  schedule: every day 12:30
  timezone: US/Eastern
- description: Taking Kobie UUID "alchemy ID" and matching that with Kobie point values
    to later tie to an email address.
  name: kobie_points_summary_bq_to_import_ann_taylor
  pipeline:
  - bigquery_query:
      destination_format: CSV
      source_file_path: kobie_alchemy_id_to_email.sql
    idx: 0
  - idx: 1
    mapper:
      field_def_file: kobie_points_summary.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: kobie_points_summary_bq_to_import_ann_taylor
  schedule: every day 01:00
  timezone: US/Eastern
- description: taking the individual certifications and adding to a write append table.
    We do this so we can "redeem" certs via the historical XCC redemption feeds cross
    referencing the cert IDs.
  name: kobie_certificate_updates_bq_put
  pipeline:
  - ftp_get:
      dirname: ann_taylor/kobie_feeds
      glob: ANN_OB_Certificate_2*.txt.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - idx: 2
    python_transform:
      source_file_path: kobie_certificate_transform.py
  - bigquery_put:
      dataset_id: r_ascena
      project_id: client-data-ingest
      schema: '{"fields":[{"name":"cert_id","mode":"REQUIRED","type":"STRING"}, {"name":"serial_number","mode":"NULLABLE","type":"STRING"},{"name":"alchemy_id","mode":"NULLABLE","type":"STRING"},{"name":"kobie_acct_number","mode":"NULLABLE","type":"STRING"},{"name":"amount","mode":"NULLABLE","type":"FLOAT64"},{"name":"status","mode":"NULLABLE","type":"STRING"},{"name":"status_date","mode":"NULLABLE","type":"STRING"},{"name":"cert_type","mode":"NULLABLE","type":"STRING"},{"name":"sub_type","mode":"NULLABLE","type":"STRING"},{"name":"expire_date","mode":"NULLABLE","type":"DATE"},{"name":"time_of_ingestion","mode":"NULLABLE","type":"TIMESTAMP"}]}'
      table_name: kobie_certificate_updates
    idx: 3
  schedule: every day 12:30
  timezone: US/Eastern
- description: This job is essentially a feed of certification IDs and when they were
    processed. This tells us which certs have been redeemed and are no longer active.
  name: kobie_xcc_redemption_ftp_to_bq_put
  pipeline:
  - ftp_get:
      dirname: ann_taylor/kobie_feeds
      glob: XCC_Daily_Redemption_PPC_*.txt.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - idx: 2
    python_transform:
      source_file_path: kobie_xcc_redemption_transform.py
  - bigquery_put:
      dataset_id: r_ascena
      project_id: client-data-ingest
      schema: '{"fields":[{"name":"cert_id","mode":"NULLABLE","type":"STRING"},{"name":"time_of_ingestion","mode":"NULLABLE","type":"TIMESTAMP"}]}'
      table_name: xcc_redemption_updates
    idx: 3
  schedule: every day 01:00
  timezone: US/Eastern
- description: takes in the certificates and alchemy ID and the XCC redemption to
    provide the new state of all certificates.
  name: kobie_update_certificates_all_table
  pipeline:
  - bigquery_transform:
      query: 'WITH certs_update AS ( SELECT * FROM `client-data-ingest.r_ascena.kobie_certificate_updates` WHERE _PARTITIONDATE = CURRENT_DATE() ), alchemy_map AS ( SELECT * EXCEPT(row_num) FROM ( SELECT kobie_alchemyid, email, ROW_NUMBER() OVER ( PARTITION BY email ORDER BY created DESC ) row_num FROM triggeredmail.ann_taylor.customers ) WHERE row_num = 1 AND kobie_alchemyid IS NOT NULL ), xcc_update AS ( SELECT * FROM `client-data-ingest.r_ascena.xcc_redemption_updates` ), certs_update_with_email AS ( SELECT certs_update.cert_id, serial_number, alchemy_id, kobie_acct_number, amount, status, status_date, cert_type, sub_type, expire_date, email, time_of_ingestion FROM certs_update LEFT JOIN alchemy_map ON certs_update.alchemy_id = alchemy_map.kobie_alchemyid ) SELECT new_certs.cert_id, serial_number, alchemy_id, kobie_acct_number, amount, status, status_date, cert_type, sub_type, expire_date, new_certs.time_of_ingestion, email, CASE WHEN xcc_update.cert_id IS NOT NULL THEN TRUE ELSE FALSE END xcc_redeemed FROM ( SELECT COALESCE( certificates_update.cert_id, certificates_existing.cert_id ) cert_id, COALESCE( certificates_update.serial_number, certificates_existing.serial_number ) serial_number, COALESCE( certificates_update.alchemy_id, certificates_existing.alchemy_id ) alchemy_id, COALESCE( certificates_update.kobie_acct_number, certificates_existing.kobie_acct_number ) kobie_acct_number, COALESCE( certificates_update.amount, certificates_existing.amount ) amount, COALESCE( certificates_update.status, certificates_existing.status ) status, COALESCE( certificates_update.status_date, certificates_existing.status_date ) status_date, COALESCE( certificates_update.cert_type, certificates_existing.cert_type ) cert_type, COALESCE( certificates_update.sub_type, certificates_existing.sub_type ) sub_type, COALESCE( certificates_update.expire_date, certificates_existing.expire_date ) expire_date, COALESCE( certificates_update.time_of_ingestion, certificates_existing.time_of_ingestion ) time_of_ingestion, COALESCE( certificates_update.email, certificates_existing.email ) email FROM ( select * except(rownum) from ( SELECT cert_id, serial_number, alchemy_id, kobie_acct_number, amount, status, status_date, cert_type, sub_type, expire_date, time_of_ingestion, email, row_number() over ( partition by cert_id order by _partitiontime desc ) rownum FROM `client-data-ingest.r_ascena.kobie_certificates_all` WHERE date(expire_date) >= current_date() ) where rownum = 1 ) certificates_existing FULL OUTER JOIN certs_update_with_email certificates_update ON certificates_existing.cert_id = certificates_update.cert_id ) new_certs LEFT JOIN xcc_update ON new_certs.cert_id = xcc_update.cert_id where date(expire_date) >= current_date() and lower(status) = "issued"'
      destination:
        dataset: r_ascena
        project: client-data-ingest
        table: kobie_certificates_all
      use_legacy_sql: false
      write_disposition: WRITE_TRUNCATE
    idx: 0
  schedule: every day 13:00
  timezone: US/Eastern
- description: final step to perform sorting on all the certs and pass these to customer
    import pipeline to update all kobie cert information
  name: kobie_json_attribute_mapping_ann_taylor
  pipeline:
  - bigquery_query:
      source_file_path: kobie_certs_to_json.sql
    idx: 0
  - idx: 1
    python_transform:
      source_file_path: kobie_certs_to_json.py
  - idx: 2
    mapper:
      field_def_file: kobie_certs_customer_attributes_mapper.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: kobie_json_attribute_mapping_ann_taylor
      shards: 200
  schedule: every day 14:00
  timezone: US/Eastern
- name: ann_taylor_offline_purchase_feed
  pipeline:
  - ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: MAS_BLUECORE_TRANSACTION_AT_*.csv.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - idx: 2
    python_transform:
      source_file_path: offline_purchase_feed.py
  - bigquery_put:
      dataset_id: r_ascena
      project_id: client-data-ingest
      schema: '{"fields":[ 
        {"name":"order_id","mode":"REQUIRED","type":"STRING"},
        {"name":"email","mode":"REQUIRED","type":"STRING"}, 
        {"name":"created","mode":"REQUIRED","type":"STRING"},
        {"name":"order_total","mode":"REQUIRED","type":"STRING"}, 
        {"name":"product_ids","mode":"REQUIRED","type":"STRING"}, 
        {"name":"store_number","mode":"NULLABLE","type":"STRING"}, 
        {"name":"pickup_date","mode":"NULLABLE","type":"STRING"}, 
        {"name":"tender_type_code","mode":"NULLABLE","type":"STRING"}, 
        {"name":"txn_channel_cd","mode":"NULLABLE","type":"STRING"}, 
        {"name":"net_net_txn_amt","mode":"NULLABLE","type":"STRING"}
        ]}'
      table_name: ann_taylor_any_purchase_offline_purchase_feed
      write_disposition: WRITE_TRUNCATE
      max_bad_records: 5000
    idx: 3
  - idx: 4
    mapper:
      field_def_file: offline_purchase_feed.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_offline_purchase_feed
  schedule: every day 12:00
  timezone: US/Eastern
- name: ann_taylor_any_purchase_offline_purchase_feed
  pipeline:
  - bigquery_query:
      destination_format: CSV
      source_file_path: any_purchase_offline_purchase_feed.sql
    idx: 0
  - idx: 1
    streaming_import:
      import_type: event
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.email"
          key: "email"
        - field_type: "string"
          path: "$.properties.store_number"
          key: "store_number"
        - field_type: "timestamp"
          path: "$.properties.created_override"
          key: "created"
        - field_type: "string"
          path: "$.event"
          key: "@event"
          value: "any_purchase"
        - field_type: "string"
          path: "$.properties.any_purchase_source"
          key: "@any_purchase_source"
          value: "offline"
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "ann_taylor_any_purchase_offline_purchase_feed"
  schedule: every day 13:00
  timezone: US/Eastern
- name: ann_taylor_any_purchase_purchase_pixel
  pipeline:
  - bigquery_query:
      destination_format: CSV
      source_file_path: any_purchase_purchase_pixel.sql
    idx: 0
  - streaming_import:
      import_type: event
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.email"
          key: "email"
        - field_type: "timestamp"
          path: "$.properties.created_override"
          key: "purchase_date"
        - field_type: "string"
          path: "$.event"
          key: "@event"
          value: "any_purchase"
        - field_type: "string"
          path: "$.properties.any_purchase_source"
          key: "@any_purchase_source"
          value: "purchase pixel"
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "ann_taylor_any_purchase_purchase_pixel"
    idx: 1
  schedule: every day 01:00
  timezone: US/Eastern
- name: ann_taylor_waterfall_count_daily
  pipeline:
  - bigquery_query:
      destination_format: CSV
      source_file_path: ann_taylor_waterfall_count_put.sql
    idx: 0
  - ftp_put:
      dirname: ann_taylor/test_folder/waterfall_counts
      filename: ann_taylor-waterfall_counts_%Y%m%d.csv
      username: chronometer
    idx: 1
  schedule: every day 16:00
  timezone: US/Eastern
- name: ascena_last_open_click_date
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: last_open_click_date.sql
  - idx: 1
    mapper:
      field_def_file: last_open_click_date.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ascena_last_open_click_date
  schedule: every day 04:00
  timezone: US/Eastern
- name: ascena_strikeiron_import
  pipeline:
  - ftp_get:
      dirname: ann_taylor/strikeiron
      glob: STRIKEIRON_*.csv.gz.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - idx: 2
    unzip: {}
  - idx: 3
    mapper:
      field_def_file: ascena_strikeiron_import.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ascena_strikeiron_import
  schedule: every day 05:00
  timezone: US/Eastern
- name: ccmp_send_export
  pipeline:
    - standardsql_query:
        destination_format: CSV
        source_file_path: CCMP_SEND_export.sql
      idx: 0
    - encrypt:
        recipient: SSG-APP-EFT-Support@ascenaretail.com
      idx: 1
    - ftp_put:
        dirname: ann_taylor/bluecore_to_ann_taylor/epsilon
        filename: AnnTaylor_send_%Y%m%d%H%M.csv.pgp
        username: chronometer
      idx: 2
  schedule: every 3 hours
  timezone: US/Eastern
- name: ccmp_subs_export
  pipeline:
    - standardsql_query:
        destination_format: CSV
        source_file_path: CCMP_SUBS_export.sql
      idx: 0
    - encrypt:
        recipient: SSG-APP-EFT-Support@ascenaretail.com
      idx: 1
    - ftp_put:
        dirname: ann_taylor/bluecore_to_ann_taylor/epsilon
        filename: AnnTaylor_subscribe_%Y%m%d.csv.pgp
        username: chronometer
      idx: 2
  schedule: every day 02:00
  timezone: US/Eastern
- name: ccmp_click_export
  pipeline:
    - standardsql_query:
        destination_format: CSV
        source_file_path: CCMP_CLICK_export.sql
      idx: 0
    - encrypt:
        recipient: SSG-APP-EFT-Support@ascenaretail.com
      idx: 1
    - ftp_put:
        dirname: ann_taylor/bluecore_to_ann_taylor/epsilon
        filename: AnnTaylor_click_%Y%m%d%H%M.csv.pgp
        username: chronometer
      idx: 2
  schedule: every 3 hours
  timezone: US/Eastern
- name: ccmp_open_export
  pipeline:
    - standardsql_query:
        destination_format: CSV
        source_file_path: CCMP_OPEN_export.sql
      idx: 0
    - encrypt:
        recipient: SSG-APP-EFT-Support@ascenaretail.com
      idx: 1
    - ftp_put:
        dirname: ann_taylor/bluecore_to_ann_taylor/epsilon
        filename: AnnTaylor_open_%Y%m%d%H%M.csv.pgp
        username: chronometer
      idx: 2
  schedule: every 3 hours
  timezone: US/Eastern
- name: ccmp_unsub_export
  pipeline:
    - standardsql_query:
        destination_format: CSV
        source_file_path: CCMP_UNSUBS_export.sql
      idx: 0
    - encrypt:
        recipient: SSG-APP-EFT-Support@ascenaretail.com
      idx: 1
    - ftp_put:
        dirname: ann_taylor/bluecore_to_ann_taylor/epsilon
        filename: AnnTaylor_unsub_%Y%m%d.csv.pgp
        username: chronometer
      idx: 2
  schedule: every day 02:00
  timezone: US/Eastern
- name: ccmp_profile_export_compare
  pipeline:
    - idx: 0
      standardsql_query:
        destination_format: CSV
        source_file_path: CCMP_PROFILE_export_compare.sql
    - bigquery_put:
        dataset_id: ann_taylor
        project_id: triggeredmail
        schema: '{"fields":[{"name":"brand_cd","mode":"NULLABLE","type":"STRING"},
          {"name":"email_addr","mode":"NULLABLE","type":"STRING"},
          {"name":"orig_source","mode":"NULLABLE","type":"STRING"},
          {"name":"last_source","mode":"NULLABLE","type":"STRING"},
          {"name":"f_first_nm","mode":"NULLABLE","type":"STRING"},
          {"name":"f_last_nm","mode":"NULLABLE","type":"STRING"},
          {"name":"f_postal_cd","mode":"NULLABLE","type":"STRING"},
          {"name":"intl_flag","mode":"NULLABLE","type":"STRING"},
          {"name":"freq_cap","mode":"NULLABLE","type":"STRING"},
          {"name":"ccmp_profile_updated","mode":"NULLABLE","type":"DATE"}
          ]}'
        table_name: ann_taylor_ccmp_profile_export
        write_disposition: WRITE_TRUNCATE
        max_bad_records: 500
      idx: 1
  schedule: every day 02:00
  timezone: US/Eastern
- name: ccmp_profile_export_delta
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: CCMP_PROFILE_export_delta.sql
  - encrypt:
      recipient: SSG-APP-EFT-Support@ascenaretail.com
    idx: 1
  - ftp_put:
      dirname: /ann_taylor/bluecore_to_ann_taylor/epsilon
      filename: AnnTaylor_profile_%Y%m%d.csv.pgp
      username: chronometer
    idx: 2
  schedule: every day 02:30
  timezone: US/Eastern
- name: ccmp_profile_export_full
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: CCMP_PROFILE_export_full.sql
  - encrypt:
      recipient: SSG-APP-EFT-Support@ascenaretail.com
    idx: 1
  - ftp_put:
      dirname: /ann_taylor/bluecore_to_ann_taylor/epsilon
      filename: AnnTaylor_profile_full_%Y%m%d.csv.pgp
      username: chronometer
    idx: 2
  schedule: every 9999 hours
  timezone: US/Eastern
- name: ccmp_ads_resubs_import
  pipeline:
  - ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: ANN_EPS_BLUECORE_ADS_RESUBS_AT_*.dat.gz.pgp
      username: chronometer
  - decrypt: {}
  - unzip: {}
  - bigquery_put:
      table_name: epsilon_ccmp_ads_resubs
      dataset_id: ann_taylor
      project_id: triggeredmail
      schema: '{"fields": [
        {"name":"EMAIL_ADDR","mode":"NULLABLE", "type": "STRING"},
        {"name":"BRAND_CD","mode":"NULLABLE", "type": "STRING"},
        {"name":"EMAIL_ID","mode":"NULLABLE", "type": "STRING"},
        {"name":"SOURCE","mode":"NULLABLE", "type": "STRING"},
        {"name":"STORE_NBR","mode":"NULLABLE", "type": "STRING"},
        {"name":"TNDR_SUBTYPE_CD","mode":"NULLABLE", "type": "STRING"},
        {"name":"SIGNUP_COUNTRY","mode":"NULLABLE", "type": "STRING"},
        {"name":"COUNTRY","mode":"NULLABLE", "type": "STRING"} ]}'
      write_disposition: "WRITE_TRUNCATE"
      csv_delimiter: '|'
  - standardsql_query:
      destination_format: CSV
      source_file_path: CCMP_ADS_RESUBS_import.sql
  - streaming_import:
      import_type: customer_patch
      delimiter: ","
      fields:
        - key: "email"
          path: "$.properties.distinct_id"
          field_type: "string"
        - key: "email"
          path: "$.properties.customer.email"
          field_type: "string"
        - key: "email_id"
          path: "$.properties.customer.email_id"
          field_type: "string"
        - key: "promo_optin"
          path: "$.properties.customer.promo_optin"
          field_type: "BOOLEAN"
        - key: "remarketing_optin"
          path: "$.properties.customer.remarketing_optin"
          field_type: "BOOLEAN"
        - key: "f_signup_country"
          path: "$.properties.customer.f_signup_country"
          field_type: "string"
        - key: "f_signup_country_date"
          path: "$.properties.customer.f_signup_country_date"
          field_type: "timestamp"
        - key: "p_orig_source"
          path: "$.properties.customer.p_orig_source"
          field_type: "string"
        - key: "p_orig_source_date"
          path: "$.properties.customer.p_orig_source_date"
          field_type: "string"
        - key: "p_intl_flag"
          path: "$.properties.customer.p_intl_flag"
          field_type: "string"
        - key: "p_last_source"
          path: "$.properties.customer.p_last_source"
          field_type: "string"
        - key: "p_last_source_date"
          path: "$.properties.customer.p_last_source_date"
          field_type: "string"
        - key: "f_country"
          path: "$.properties.customer.f_country"
          field_type: "string"
        - key: "store_nbr"
          path: "$.properties.customer.store_nbr"
          field_type: "string"
        - key: "namespace"
          path: "$.properties.namespace"
          field_type: "string"
        - key: "@source"
          path: "$.properties.source"
          field_type: "string"
          value: "epsilon ads resubs import"
  schedule: every day 21:00
  timezone: US/Eastern
- name: ccmp_pos_resubs_import
  pipeline:
  - ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: ANN_EPS_BLUECORE_POS_RESUBS_AT_*.dat.gz.pgp
      username: chronometer
  - decrypt: {}
  - unzip: {}
  - bigquery_put:
      table_name: epsilon_ccmp_pos_resubs
      dataset_id: ann_taylor
      project_id: triggeredmail
      schema: '{"fields": [
        {"name":"EMAIL_ADDR","mode":"NULLABLE", "type": "STRING"},
        {"name":"BRAND_CD","mode":"NULLABLE", "type": "STRING"},
        {"name":"EMAIL_ID","mode":"NULLABLE", "type": "STRING"},
        {"name":"SOURCE","mode":"NULLABLE", "type": "STRING"},
        {"name":"STORE_NBR","mode":"NULLABLE", "type": "STRING"},
        {"name":"TNDR_SUBTYPE_CD","mode":"NULLABLE", "type": "STRING"},
        {"name":"SIGNUP_COUNTRY","mode":"NULLABLE", "type": "STRING"},
        {"name":"COUNTRY","mode":"NULLABLE", "type": "STRING"} ]}'
      write_disposition: "WRITE_TRUNCATE"
      csv_delimiter: '|'
  - standardsql_query:
      destination_format: CSV
      source_file_path: CCMP_POS_RESUBS_import.sql
  - streaming_import:
      import_type: customer_patch
      delimiter: ","
      fields:
        - key: "email"
          path: "$.properties.distinct_id"
          field_type: "string"
        - key: "email"
          path: "$.properties.customer.email"
          field_type: "string"
        - key: "email_id"
          path: "$.properties.customer.email_id"
          field_type: "string"
        - key: "promo_optin"
          path: "$.properties.customer.promo_optin"
          field_type: "BOOLEAN"
        - key: "remarketing_optin"
          path: "$.properties.customer.remarketing_optin"
          field_type: "BOOLEAN"
        - key: "f_signup_country"
          path: "$.properties.customer.f_signup_country"
          field_type: "string"
        - key: "f_signup_country_date"
          path: "$.properties.customer.f_signup_country_date"
          field_type: "timestamp"
        - key: "p_orig_source"
          path: "$.properties.customer.p_orig_source"
          field_type: "string"
        - key: "p_orig_source_date"
          path: "$.properties.customer.p_orig_source_date"
          field_type: "string"
        - key: "p_intl_flag"
          path: "$.properties.customer.p_intl_flag"
          field_type: "string"
        - key: "p_last_source"
          path: "$.properties.customer.p_last_source"
          field_type: "string"
        - key: "p_last_source_date"
          path: "$.properties.customer.p_last_source_date"
          field_type: "string"
        - key: "store_nbr"
          path: "$.properties.customer.store_nbr"
          field_type: "string"
        - key: "namespace"
          path: "$.properties.namespace"
          field_type: "string"
        - key: "@source"
          path: "$.properties.source"
          field_type: "string"
          value: "epsilon pos resubs import"
  schedule: every day 21:00
  timezone: US/Eastern
- name: ccmp_pos_noresubs_import
  pipeline:
  - ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: ANN_EPS_BLUECORE_POS_NORESUBS_AT_*.dat.gz.pgp
      username: chronometer
  - decrypt: {}
  - unzip: {}
  - bigquery_put:
      table_name: epsilon_ccmp_pos_noresubs
      dataset_id: ann_taylor
      project_id: triggeredmail
      schema: '{"fields": [
        {"name":"EMAIL_ADDR","mode":"NULLABLE", "type": "STRING"},
        {"name":"BRAND_CD","mode":"NULLABLE", "type": "STRING"},
        {"name":"EMAIL_ID","mode":"NULLABLE", "type": "STRING"},
        {"name":"SOURCE","mode":"NULLABLE", "type": "STRING"},
        {"name":"STORE_NBR","mode":"NULLABLE", "type": "STRING"},
        {"name":"TNDR_SUBTYPE_CD","mode":"NULLABLE", "type": "STRING"},
        {"name":"SIGNUP_COUNTRY","mode":"NULLABLE", "type": "STRING"},
        {"name":"COUNTRY","mode":"NULLABLE", "type": "STRING"} ]}'
      write_disposition: "WRITE_TRUNCATE"
      csv_delimiter: '|'
  - standardsql_query:
      destination_format: CSV
      source_file_path: CCMP_POS_NORESUBS_import.sql
  - streaming_import:
      import_type: customer_patch
      delimiter: ","
      fields:
        - key: "email"
          path: "$.properties.distinct_id"
          field_type: "string"
        - key: "email"
          path: "$.properties.customer.email"
          field_type: "string"
        - key: "email_id"
          path: "$.properties.customer.email_id"
          field_type: "string"
        - key: "promo_optin"
          path: "$.properties.customer.promo_optin"
          field_type: "BOOLEAN"
        - key: "remarketing_optin"
          path: "$.properties.customer.remarketing_optin"
          field_type: "BOOLEAN"
        - key: "f_signup_country"
          path: "$.properties.customer.f_signup_country"
          field_type: "string"
        - key: "f_signup_country_date"
          path: "$.properties.customer.f_signup_country_date"
          field_type: "timestamp"
        - key: "p_orig_source"
          path: "$.properties.customer.p_orig_source"
          field_type: "string"
        - key: "p_orig_source_date"
          path: "$.properties.customer.p_orig_source_date"
          field_type: "string"
        - key: "p_intl_flag"
          path: "$.properties.customer.p_intl_flag"
          field_type: "string"
        - key: "p_last_source"
          path: "$.properties.customer.p_last_source"
          field_type: "string"
        - key: "p_last_source_date"
          path: "$.properties.customer.p_last_source_date"
          field_type: "string"
        - key: "store_nbr"
          path: "$.properties.customer.store_nbr"
          field_type: "string"
        - key: "namespace"
          path: "$.properties.namespace"
          field_type: "string"
        - key: "@source"
          path: "$.properties.source"
          field_type: "string"
          value: "epsilon pos noresubs import"
  schedule: every day 21:00
  timezone: US/Eastern
- name: ccmp_imports_optins
  pipeline:
  - standardsql_query:
      destination_format: CSV
      source_file_path: CCMP_imports_optins.sql
  - streaming_import:
      import_type: email_opt_in
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.email"
          key: "email"
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "ccmp_imports_optins"
        - field_type: "string"
          path: "$.properties.channel_type"
          key: "@channel_type"
          value: "email"
        - field_type: "string"
          path: "$.properties.channel"
          key: "@channel"
          value: "email"
        - field_type: "string"
          path: "$.properties.channel_identifier"
          key: "@channel_identifier"
          value: "unset"
        - field_type: "string"
          path: "$.properties.message_type"
          key: "@message_type"
          value: "marketing"
        - key: "namespace"
          path: "$.properties.namespace"
          field_type: "string"
    idx: 1
  schedule: every day 23:00
  timezone: US/Eastern
- name: ccmp_imports_any_purchase
  pipeline:
  - standardsql_query:
      destination_format: CSV
      source_file_path: CCMP_imports_any_purchase.sql
  - streaming_import:
      import_type: event
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.email"
          key: "email"
        - field_type: "string"
          path: "$.properties.store_number"
          key: "store_number"
        - field_type: "timestamp"
          path: "$.properties.created_override"
          key: "created_override"
        - field_type: "string"
          path: "$.event"
          key: "@event"
          value: "any_purchase"
        - field_type: "string"
          path: "$.properties.any_purchase_source"
          key: "any_purchase_source"
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "ccmp_imports_any_purchase"
        - field_type: "string"
          path: "$.properties.namespace"
          key: "namespace"
  schedule: every day 04:00
  timezone: US/Eastern
- name: ann_taylor_adobe_form_submissions
  description: updating remarketing_optin for customers who submitted an adobe pop-up
  rerun_policy: ignore
  feed_category: 
    - import_customer_data
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: adobe_submissions.sql
  - idx: 1
    streaming_import:
      import_type: customer_patch
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.customer.email"
          key: "email"
        - field_type: "boolean"
          path: "$.properties.customer.remarketing_optin"
          key: "remarketing_optin"
        - field_type: "boolean"
          path: "$.properties.customer.promo_optin"
          key: "@promo_optin"
          value: true
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "adobe_form"
        - key: "p_last_source_date"
          path: "$.properties.customer.p_last_source_date"
          field_type: "string"
        - key: "@p_last_source"
          path: "$.properties.customer.p_last_source"
          field_type: "string"
          value: "OTATA"
  schedule: every 1 hours
  timezone: US/Eastern
- name: ann_taylor_experian_coop_actions_export
  description: daily export of email actions to Experian
  pipeline:
    - idx: 0
      standardsql_query:
        destination_format: CSV
        source_file_path: experian_coop_actions.sql
    - idx: 1
      encrypt:
        recipient: SSG-APP-EFT-Support@ascenaretail.com
    - idx: 2
      ftp_put:
        dirname: /ann_taylor/bluecore_to_ann_taylor/experian
        filename: AT_actions_%Y%m%d.csv.pgp
        username: chronometer
  rerun_policy: immediate
  feed_category:
    - export_esp_data
  schedule: every day 01:00
  timezone: US/Eastern
- name: ann_taylor_experian_coop_customers_export
  description: daily export of new customer actions to Experian
  pipeline:
    - idx: 0
      standardsql_query:
        destination_format: CSV
        source_file_path: experian_coop_customers.sql
    - idx: 1
      encrypt:
        recipient: SSG-APP-EFT-Support@ascenaretail.com
    - idx: 2
      ftp_put:
        dirname: /ann_taylor/bluecore_to_ann_taylor/experian
        filename: AT_customer_%Y%m%d.csv.pgp
        username: chronometer
  rerun_policy: immediate
  feed_category:
    - export_esp_data
  schedule: every day 01:00
  timezone: US/Eastern
- name: ann_taylor_experian_coop_import
  description: monthly import of last open and click dates from Experian. These files are too large to process automatically, instead first decrypt the file (called 'Type1Source230.csv.pgp') then run the python transform on it locally, then break into segments of 10 million rows each and import one at a time.
  rerun_policy: immediate
  feed_category:
    - import_customer_data
  pipeline:
  - idx: 0
    ftp_get:
      dirname: ann_taylor/test_folder/decrypt-temp/experian
      glob: Type1Source230_part*.csv
      username: chronometer
  # - idx: 1
  #   decrypt: {}
  # - idx: 1
  #   python_transform:
  #     source_file_path: experian_coop_import.py
  - idx: 1
    mapper:
      field_def_file: experian_coop_mapper.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: experian_feed
      shards: 200
  schedule: second monday of month 14:00
  timezone: US/Eastern
- name: ann_taylor_legal_optout_feed_unsubscribes
  pipeline:
  - ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: ANN_ATG_OPTOUT_PREFERENCES_*.csv.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - python_transform:
      source_file_path: legal_optout_feed.py
    idx: 2
  - streaming_import:
      import_type: email_unsubscribe
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.email"
          key: "email"
        - field_type: "string"
          path: "$.properties.namespace"
          key: "namespace"
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "ann_taylor_legal_optout_feed"
        - field_type: "string"
          path: "$.properties.channel_type"
          key: "@channel_type"
          value: "email"
        - field_type: "string"
          path: "$.properties.channel"
          key: "@channel"
          value: "email"
        - field_type: "string"
          path: "$.properties.channel_identifier"
          key: "@channel_identifier"
          value: "unset"
        - field_type: "string"
          path: "$.properties.message_type"
          key: "@message_type"
          value: "marketing"
    idx: 3
  schedule: every day 02:00
  timezone: US/Eastern
- name: ann_taylor_legal_optout_feed_customer_patch
  pipeline:
  - ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: ANN_ATG_OPTOUT_PREFERENCES_*.csv.pgp
      username: chronometer
    idx: 0
  - decrypt: {}
    idx: 1
  - python_transform:
      source_file_path: legal_optout_feed.py
    idx: 2
  - streaming_import:
      import_type: customer_patch
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.customer.email"
          key: "email"
        - field_type: "string"
          path: "$.properties.namespace"
          key: "namespace"
        - field_type: "boolean"
          path: "$.properties.customer.remarketing_optin"
          key: "@remarketing_optin"
          value: false
        - field_type: "boolean"
          path: "$.properties.customer.promo_optin"
          key: "@promo_optin"
          value: false
        - field_type: "boolean"
          path: "$.properties.customer.loyalty_optin"
          key: "@loyalty_optin"
          value: false
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "ann_taylor_legal_optout_feed"
    idx: 3
  schedule: every day 01:00
  timezone: US/Eastern
- name: ann_taylor_ibs_feed_import
  pipeline:
  - ftp_get:
      dirname: ann_taylor/ann_taylor_to_bluecore
      glob: ANN_BLUECORE_IBS_AT_*.csv.gz.pgp
      username: chronometer
  - decrypt: {}
  - unzip: {}
  - idx: 2
    mapper:
      field_def_file: ibs_feed_mapper.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_ibs_feed_import
      shards: 200
  schedule: every 1 hours
  timezone: US/Eastern
- name: ann_taylor_checkout_opt_ins
  description: opting in all customers who go through the checkout flow and are not unsubscribed
  rerun_policy: ignore
  feed_category: 
    - import_customer_data
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: checkout_opt_ins.sql
  - idx: 1
    streaming_import:
      import_type: email_opt_in
      delimiter: ','
      fields:
        - field_type: "string"
          path: "$.properties.email"
          key: "email"
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "checkout_optin"
        - field_type: "string"
          path: "$.properties.channel_type"
          key: "@channel_type"
          value: "email"
        - field_type: "string"
          path: "$.properties.channel"
          key: "@channel"
          value: "email"
        - field_type: "string"
          path: "$.properties.channel_identifier"
          key: "@channel_identifier"
          value: "unset"
        - field_type: "string"
          path: "$.properties.message_type"
          key: "@message_type"
          value: "marketing"
  schedule: every 1 hours
  timezone: US/Eastern
- name: ann_taylor_checkout_opt_ins_customer_patch
  description: updating customer attributes all customers who go through the checkout flow and are not unsubscribed
  rerun_policy: ignore
  feed_category: 
    - import_customer_data
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: checkout_opt_ins.sql
  - idx: 1
    streaming_import:
      import_type: customer_patch
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.customer.email"
          key: "email"
        - field_type: "boolean"
          path: "$.properties.customer.remarketing_optin"
          key: "@remarketing_optin"
          value: true
        - field_type: "boolean"
          path: "$.properties.customer.promo_optin"
          key: "@promo_optin"
          value: true
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "ann_taylor_checkout_optin"
  schedule: every 1 hours
  timezone: US/Eastern
- name: ann_taylor_create_account_source_updates
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: source_detail_update.sql
  - idx: 1
    streaming_import:
      import_type: customer_patch
      delimiter: ","
      fields:
        - field_type: "string"
          path: "$.properties.customer.email"
          key: "email"
        - field_type: "string"
          path: "$.properties.customer.p_orig_source"
          key: "p_orig_source"
        - field_type: "timestamp"
          path: "$.properties.customer.p_orig_source_date"
          key: "p_orig_source_date"
        - field_type: "string"
          path: "$.properties.customer.f_signup_country"
          key: "f_signup_country"
        - field_type: "timestamp"
          path: "$.properties.customer.f_signup_country_date"
          key: "f_signup_country_date"
        - field_type: "string"
          path: "$.properties.source"
          key: "@source"
          value: "chronometer"
        - field_type: "string"
          path: "$.properties.source_detail"
          key: "@source_detail"
          value: "ann_taylor_integration_source_updates"
  schedule: every 1 hours
  timezone: US/Eastern
- name: update_kobie_alcheymid_via_mcpp
  pipeline:
  - idx: 0
    ftp_get:
      dirname: ann_taylor/bad_alchemyid_customers
      glob: '*.csv'
      username: chronometer
  - idx: 1
    mapper:
      field_def_file: update_kobie_alchemyid_mapper.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ascena_update_kobie_alcheymid_via_mcpp
  schedule: every 9999 hours
  timezone: US/Eastern
- name: kobie_alchemy_id_cleanup
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: get_incorrect_alchemy_id_email_addresses.sql
  - idx: 1
    mapper:
      field_def_file: kobie_alchemy_id_cleanup.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: kobie_alchemy_id_cleanup
  schedule: every day 03:00
  timezone: US/Eastern
- name: decrypt_mas_alchemy_id_validation_files
  pipeline:
  - idx: 0
    ftp_get:
      dirname: lane_bryant/temp
      glob: 'MAS_Team_BC_KOBIE_Validation*.csv.pgp'
      username: chronometer
  - idx: 1
    decrypt: {}
  schedule: every 9999 hours
  timezone: US/Eastern
- name: insights_recs_manual_update
  pipeline:
  - idx: 0
    standardsql_query:
      destination_format: CSV
      source_file_path: insights_recs_manual_update.sql
  - idx: 1
    mapper:
      field_def_file: insights_recs_mapper.yaml
      handler_spec: engine.chrono.jobs.chrono_event_feed_mapper
      input_reader_spec: mapreduce.input_readers.GoogleCloudStorageLineInputReader
      job_name: ann_taylor_insights_recs_manual_update
  schedule: every day 03:00
  timezone: US/Eastern